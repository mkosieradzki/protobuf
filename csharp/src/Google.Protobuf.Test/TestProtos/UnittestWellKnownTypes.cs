// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/protobuf/unittest_well_known_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.TestProtos {

  /// <summary>Holder for reflection information generated from google/protobuf/unittest_well_known_types.proto</summary>
  public static partial class UnittestWellKnownTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/protobuf/unittest_well_known_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UnittestWellKnownTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nb29nbGUvcHJvdG9idWYvdW5pdHRlc3Rfd2VsbF9rbm93bl90eXBlcy5w",
            "cm90bxIRcHJvdG9idWZfdW5pdHRlc3QaGWdvb2dsZS9wcm90b2J1Zi9hbnku",
            "cHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hcGkucHJvdG8aHmdvb2dsZS9wcm90",
            "b2J1Zi9kdXJhdGlvbi5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvGiBnb29nbGUvcHJvdG9idWYvZmllbGRfbWFzay5wcm90bxokZ29vZ2xl",
            "L3Byb3RvYnVmL3NvdXJjZV9jb250ZXh0LnByb3RvGhxnb29nbGUvcHJvdG9i",
            "dWYvc3RydWN0LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGhpnb29nbGUvcHJvdG9idWYvdHlwZS5wcm90bxoeZ29vZ2xlL3Byb3Rv",
            "YnVmL3dyYXBwZXJzLnByb3RvIr4HChJUZXN0V2VsbEtub3duVHlwZXMSJwoJ",
            "YW55X2ZpZWxkGAEgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRInCglhcGlf",
            "ZmllbGQYAiABKAsyFC5nb29nbGUucHJvdG9idWYuQXBpEjEKDmR1cmF0aW9u",
            "X2ZpZWxkGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEisKC2Vt",
            "cHR5X2ZpZWxkGAQgASgLMhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EjQKEGZp",
            "ZWxkX21hc2tfZmllbGQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRN",
            "YXNrEjwKFHNvdXJjZV9jb250ZXh0X2ZpZWxkGAYgASgLMh4uZ29vZ2xlLnBy",
            "b3RvYnVmLlNvdXJjZUNvbnRleHQSLQoMc3RydWN0X2ZpZWxkGAcgASgLMhcu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cnVjdBIzCg90aW1lc3RhbXBfZmllbGQYCCAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEikKCnR5cGVfZmllbGQY",
            "CSABKAsyFS5nb29nbGUucHJvdG9idWYuVHlwZRIyCgxkb3VibGVfZmllbGQY",
            "CiABKAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUSMAoLZmxvYXRf",
            "ZmllbGQYCyABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIwCgtp",
            "bnQ2NF9maWVsZBgMIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVl",
            "EjIKDHVpbnQ2NF9maWVsZBgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50",
            "NjRWYWx1ZRIwCgtpbnQzMl9maWVsZBgOIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQzMlZhbHVlEjIKDHVpbnQzMl9maWVsZBgPIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5VSW50MzJWYWx1ZRIuCgpib29sX2ZpZWxkGBAgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIyCgxzdHJpbmdfZmllbGQYESABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoLYnl0ZXNfZmllbGQY",
            "EiABKAsyGy5nb29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZRIrCgt2YWx1ZV9m",
            "aWVsZBgTIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZSKVBwoWUmVwZWF0",
            "ZWRXZWxsS25vd25UeXBlcxInCglhbnlfZmllbGQYASADKAsyFC5nb29nbGUu",
            "cHJvdG9idWYuQW55EicKCWFwaV9maWVsZBgCIAMoCzIULmdvb2dsZS5wcm90",
            "b2J1Zi5BcGkSMQoOZHVyYXRpb25fZmllbGQYAyADKAsyGS5nb29nbGUucHJv",
            "dG9idWYuRHVyYXRpb24SKwoLZW1wdHlfZmllbGQYBCADKAsyFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkSNAoQZmllbGRfbWFza19maWVsZBgFIAMoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sSPAoUc291cmNlX2NvbnRleHRfZmll",
            "bGQYBiADKAsyHi5nb29nbGUucHJvdG9idWYuU291cmNlQ29udGV4dBItCgxz",
            "dHJ1Y3RfZmllbGQYByADKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EjMK",
            "D3RpbWVzdGFtcF9maWVsZBgIIAMoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASKQoKdHlwZV9maWVsZBgJIAMoCzIVLmdvb2dsZS5wcm90b2J1Zi5U",
            "eXBlEjIKDGRvdWJsZV9maWVsZBgKIAMoCzIcLmdvb2dsZS5wcm90b2J1Zi5E",
            "b3VibGVWYWx1ZRIwCgtmbG9hdF9maWVsZBgLIAMoCzIbLmdvb2dsZS5wcm90",
            "b2J1Zi5GbG9hdFZhbHVlEjAKC2ludDY0X2ZpZWxkGAwgAygLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUSMgoMdWludDY0X2ZpZWxkGA0gAygLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlVJbnQ2NFZhbHVlEjAKC2ludDMyX2ZpZWxkGA4g",
            "AygLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMgoMdWludDMyX2Zp",
            "ZWxkGA8gAygLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlEi4KCmJv",
            "b2xfZmllbGQYECADKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjIK",
            "DHN0cmluZ19maWVsZBgRIAMoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIwCgtieXRlc19maWVsZBgSIAMoCzIbLmdvb2dsZS5wcm90b2J1Zi5C",
            "eXRlc1ZhbHVlIsUHChNPbmVvZldlbGxLbm93blR5cGVzEikKCWFueV9maWVs",
            "ZBgBIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlIABIpCglhcGlfZmllbGQY",
            "AiABKAsyFC5nb29nbGUucHJvdG9idWYuQXBpSAASMwoOZHVyYXRpb25fZmll",
            "bGQYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25IABItCgtlbXB0",
            "eV9maWVsZBgEIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUgAEjYKEGZp",
            "ZWxkX21hc2tfZmllbGQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRN",
            "YXNrSAASPgoUc291cmNlX2NvbnRleHRfZmllbGQYBiABKAsyHi5nb29nbGUu",
            "cHJvdG9idWYuU291cmNlQ29udGV4dEgAEi8KDHN0cnVjdF9maWVsZBgHIAEo",
            "CzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RIABI1Cg90aW1lc3RhbXBfZmll",
            "bGQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASKwoKdHlw",
            "ZV9maWVsZBgJIAEoCzIVLmdvb2dsZS5wcm90b2J1Zi5UeXBlSAASNAoMZG91",
            "YmxlX2ZpZWxkGAogASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVl",
            "SAASMgoLZmxvYXRfZmllbGQYCyABKAsyGy5nb29nbGUucHJvdG9idWYuRmxv",
            "YXRWYWx1ZUgAEjIKC2ludDY0X2ZpZWxkGAwgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWVIABI0Cgx1aW50NjRfZmllbGQYDSABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuVUludDY0VmFsdWVIABIyCgtpbnQzMl9maWVsZBgOIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlSAASNAoMdWludDMyX2Zp",
            "ZWxkGA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlSAASMAoK",
            "Ym9vbF9maWVsZBgQIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWVI",
            "ABI0CgxzdHJpbmdfZmllbGQYESABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWVIABIyCgtieXRlc19maWVsZBgSIAEoCzIbLmdvb2dsZS5wcm90",
            "b2J1Zi5CeXRlc1ZhbHVlSABCDQoLb25lb2ZfZmllbGQilhYKEU1hcFdlbGxL",
            "bm93blR5cGVzEkUKCWFueV9maWVsZBgBIAMoCzIyLnByb3RvYnVmX3VuaXR0",
            "ZXN0Lk1hcFdlbGxLbm93blR5cGVzLkFueUZpZWxkRW50cnkSRQoJYXBpX2Zp",
            "ZWxkGAIgAygLMjIucHJvdG9idWZfdW5pdHRlc3QuTWFwV2VsbEtub3duVHlw",
            "ZXMuQXBpRmllbGRFbnRyeRJPCg5kdXJhdGlvbl9maWVsZBgDIAMoCzI3LnBy",
            "b3RvYnVmX3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5cGVzLkR1cmF0aW9uRmll",
            "bGRFbnRyeRJJCgtlbXB0eV9maWVsZBgEIAMoCzI0LnByb3RvYnVmX3VuaXR0",
            "ZXN0Lk1hcFdlbGxLbm93blR5cGVzLkVtcHR5RmllbGRFbnRyeRJSChBmaWVs",
            "ZF9tYXNrX2ZpZWxkGAUgAygLMjgucHJvdG9idWZfdW5pdHRlc3QuTWFwV2Vs",
            "bEtub3duVHlwZXMuRmllbGRNYXNrRmllbGRFbnRyeRJaChRzb3VyY2VfY29u",
            "dGV4dF9maWVsZBgGIAMoCzI8LnByb3RvYnVmX3VuaXR0ZXN0Lk1hcFdlbGxL",
            "bm93blR5cGVzLlNvdXJjZUNvbnRleHRGaWVsZEVudHJ5EksKDHN0cnVjdF9m",
            "aWVsZBgHIAMoCzI1LnByb3RvYnVmX3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5",
            "cGVzLlN0cnVjdEZpZWxkRW50cnkSUQoPdGltZXN0YW1wX2ZpZWxkGAggAygL",
            "MjgucHJvdG9idWZfdW5pdHRlc3QuTWFwV2VsbEtub3duVHlwZXMuVGltZXN0",
            "YW1wRmllbGRFbnRyeRJHCgp0eXBlX2ZpZWxkGAkgAygLMjMucHJvdG9idWZf",
            "dW5pdHRlc3QuTWFwV2VsbEtub3duVHlwZXMuVHlwZUZpZWxkRW50cnkSSwoM",
            "ZG91YmxlX2ZpZWxkGAogAygLMjUucHJvdG9idWZfdW5pdHRlc3QuTWFwV2Vs",
            "bEtub3duVHlwZXMuRG91YmxlRmllbGRFbnRyeRJJCgtmbG9hdF9maWVsZBgL",
            "IAMoCzI0LnByb3RvYnVmX3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5cGVzLkZs",
            "b2F0RmllbGRFbnRyeRJJCgtpbnQ2NF9maWVsZBgMIAMoCzI0LnByb3RvYnVm",
            "X3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5cGVzLkludDY0RmllbGRFbnRyeRJL",
            "Cgx1aW50NjRfZmllbGQYDSADKAsyNS5wcm90b2J1Zl91bml0dGVzdC5NYXBX",
            "ZWxsS25vd25UeXBlcy5VaW50NjRGaWVsZEVudHJ5EkkKC2ludDMyX2ZpZWxk",
            "GA4gAygLMjQucHJvdG9idWZfdW5pdHRlc3QuTWFwV2VsbEtub3duVHlwZXMu",
            "SW50MzJGaWVsZEVudHJ5EksKDHVpbnQzMl9maWVsZBgPIAMoCzI1LnByb3Rv",
            "YnVmX3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5cGVzLlVpbnQzMkZpZWxkRW50",
            "cnkSRwoKYm9vbF9maWVsZBgQIAMoCzIzLnByb3RvYnVmX3VuaXR0ZXN0Lk1h",
            "cFdlbGxLbm93blR5cGVzLkJvb2xGaWVsZEVudHJ5EksKDHN0cmluZ19maWVs",
            "ZBgRIAMoCzI1LnByb3RvYnVmX3VuaXR0ZXN0Lk1hcFdlbGxLbm93blR5cGVz",
            "LlN0cmluZ0ZpZWxkRW50cnkSSQoLYnl0ZXNfZmllbGQYEiADKAsyNC5wcm90",
            "b2J1Zl91bml0dGVzdC5NYXBXZWxsS25vd25UeXBlcy5CeXRlc0ZpZWxkRW50",
            "cnkaRQoNQW55RmllbGRFbnRyeRILCgNrZXkYASABKAUSIwoFdmFsdWUYAiAB",
            "KAsyFC5nb29nbGUucHJvdG9idWYuQW55OgI4ARpFCg1BcGlGaWVsZEVudHJ5",
            "EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULmdvb2dsZS5wcm90b2J1",
            "Zi5BcGk6AjgBGk8KEkR1cmF0aW9uRmllbGRFbnRyeRILCgNrZXkYASABKAUS",
            "KAoFdmFsdWUYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb246AjgB",
            "GkkKD0VtcHR5RmllbGRFbnRyeRILCgNrZXkYASABKAUSJQoFdmFsdWUYAiAB",
            "KAsyFi5nb29nbGUucHJvdG9idWYuRW1wdHk6AjgBGlEKE0ZpZWxkTWFza0Zp",
            "ZWxkRW50cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLkZpZWxkTWFzazoCOAEaWQoXU291cmNlQ29udGV4dEZpZWxk",
            "RW50cnkSCwoDa2V5GAEgASgFEi0KBXZhbHVlGAIgASgLMh4uZ29vZ2xlLnBy",
            "b3RvYnVmLlNvdXJjZUNvbnRleHQ6AjgBGksKEFN0cnVjdEZpZWxkRW50cnkS",
            "CwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cnVjdDoCOAEaUQoTVGltZXN0YW1wRmllbGRFbnRyeRILCgNrZXkYASAB",
            "KAUSKQoFdmFsdWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "OgI4ARpHCg5UeXBlRmllbGRFbnRyeRILCgNrZXkYASABKAUSJAoFdmFsdWUY",
            "AiABKAsyFS5nb29nbGUucHJvdG9idWYuVHlwZToCOAEaUAoQRG91YmxlRmll",
            "bGRFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuRG91YmxlVmFsdWU6AjgBGk4KD0Zsb2F0RmllbGRFbnRyeRIL",
            "CgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "RmxvYXRWYWx1ZToCOAEaTgoPSW50NjRGaWVsZEVudHJ5EgsKA2tleRgBIAEo",
            "BRIqCgV2YWx1ZRgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVl",
            "OgI4ARpQChBVaW50NjRGaWVsZEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50NjRWYWx1ZToCOAEaTgoP",
            "SW50MzJGaWVsZEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlOgI4ARpQChBVaW50MzJGaWVs",
            "ZEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5VSW50MzJWYWx1ZToCOAEaTAoOQm9vbEZpZWxkRW50cnkSCwoD",
            "a2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJv",
            "b2xWYWx1ZToCOAEaUAoQU3RyaW5nRmllbGRFbnRyeRILCgNrZXkYASABKAUS",
            "KwoFdmFsdWUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWU6",
            "AjgBGk4KD0J5dGVzRmllbGRFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUY",
            "AiABKAsyGy5nb29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZToCOAFCOQoYY29t",
            "Lmdvb2dsZS5wcm90b2J1Zi50ZXN0UAGqAhpHb29nbGUuUHJvdG9idWYuVGVz",
            "dFByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.ApiReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.SourceContextReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.TestProtos.TestWellKnownTypes), global::Google.Protobuf.TestProtos.TestWellKnownTypes.Parser, new[]{ "AnyField", "ApiField", "DurationField", "EmptyField", "FieldMaskField", "SourceContextField", "StructField", "TimestampField", "TypeField", "DoubleField", "FloatField", "Int64Field", "Uint64Field", "Int32Field", "Uint32Field", "BoolField", "StringField", "BytesField", "ValueField" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.TestProtos.RepeatedWellKnownTypes), global::Google.Protobuf.TestProtos.RepeatedWellKnownTypes.Parser, new[]{ "AnyField", "ApiField", "DurationField", "EmptyField", "FieldMaskField", "SourceContextField", "StructField", "TimestampField", "TypeField", "DoubleField", "FloatField", "Int64Field", "Uint64Field", "Int32Field", "Uint32Field", "BoolField", "StringField", "BytesField" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.TestProtos.OneofWellKnownTypes), global::Google.Protobuf.TestProtos.OneofWellKnownTypes.Parser, new[]{ "AnyField", "ApiField", "DurationField", "EmptyField", "FieldMaskField", "SourceContextField", "StructField", "TimestampField", "TypeField", "DoubleField", "FloatField", "Int64Field", "Uint64Field", "Int32Field", "Uint32Field", "BoolField", "StringField", "BytesField" }, new[]{ "OneofField" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.TestProtos.MapWellKnownTypes), global::Google.Protobuf.TestProtos.MapWellKnownTypes.Parser, new[]{ "AnyField", "ApiField", "DurationField", "EmptyField", "FieldMaskField", "SourceContextField", "StructField", "TimestampField", "TypeField", "DoubleField", "FloatField", "Int64Field", "Uint64Field", "Int32Field", "Uint32Field", "BoolField", "StringField", "BytesField" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Test that we can include all well-known types.
  /// Each wrapper type is included separately, as languages
  /// map handle different wrappers in different ways.
  /// </summary>
  public sealed partial class TestWellKnownTypes : pb::IMessage<TestWellKnownTypes> {
    private static readonly pb::MessageParser<TestWellKnownTypes> _parser = new pb::MessageParser<TestWellKnownTypes>(() => new TestWellKnownTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestWellKnownTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TestProtos.UnittestWellKnownTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestWellKnownTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestWellKnownTypes(TestWellKnownTypes other) : this() {
      anyField_ = other.anyField_ != null ? other.anyField_.Clone() : null;
      apiField_ = other.apiField_ != null ? other.apiField_.Clone() : null;
      durationField_ = other.durationField_ != null ? other.durationField_.Clone() : null;
      emptyField_ = other.emptyField_ != null ? other.emptyField_.Clone() : null;
      fieldMaskField_ = other.fieldMaskField_ != null ? other.fieldMaskField_.Clone() : null;
      sourceContextField_ = other.sourceContextField_ != null ? other.sourceContextField_.Clone() : null;
      structField_ = other.structField_ != null ? other.structField_.Clone() : null;
      timestampField_ = other.timestampField_ != null ? other.timestampField_.Clone() : null;
      typeField_ = other.typeField_ != null ? other.typeField_.Clone() : null;
      DoubleField = other.DoubleField;
      FloatField = other.FloatField;
      Int64Field = other.Int64Field;
      Uint64Field = other.Uint64Field;
      Int32Field = other.Int32Field;
      Uint32Field = other.Uint32Field;
      BoolField = other.BoolField;
      StringField = other.StringField;
      BytesField = other.BytesField;
      valueField_ = other.valueField_ != null ? other.valueField_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestWellKnownTypes Clone() {
      return new TestWellKnownTypes(this);
    }

    /// <summary>Field number for the "any_field" field.</summary>
    public const int AnyFieldFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any anyField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any AnyField {
      get { return anyField_; }
      set {
        anyField_ = value;
      }
    }

    /// <summary>Field number for the "api_field" field.</summary>
    public const int ApiFieldFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Api apiField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Api ApiField {
      get { return apiField_; }
      set {
        apiField_ = value;
      }
    }

    /// <summary>Field number for the "duration_field" field.</summary>
    public const int DurationFieldFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration durationField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration DurationField {
      get { return durationField_; }
      set {
        durationField_ = value;
      }
    }

    /// <summary>Field number for the "empty_field" field.</summary>
    public const int EmptyFieldFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Empty emptyField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty EmptyField {
      get { return emptyField_; }
      set {
        emptyField_ = value;
      }
    }

    /// <summary>Field number for the "field_mask_field" field.</summary>
    public const int FieldMaskFieldFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.FieldMask fieldMaskField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask FieldMaskField {
      get { return fieldMaskField_; }
      set {
        fieldMaskField_ = value;
      }
    }

    /// <summary>Field number for the "source_context_field" field.</summary>
    public const int SourceContextFieldFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.SourceContext sourceContextField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.SourceContext SourceContextField {
      get { return sourceContextField_; }
      set {
        sourceContextField_ = value;
      }
    }

    /// <summary>Field number for the "struct_field" field.</summary>
    public const int StructFieldFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Struct structField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct StructField {
      get { return structField_; }
      set {
        structField_ = value;
      }
    }

    /// <summary>Field number for the "timestamp_field" field.</summary>
    public const int TimestampFieldFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestampField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampField {
      get { return timestampField_; }
      set {
        timestampField_ = value;
      }
    }

    /// <summary>Field number for the "type_field" field.</summary>
    public const int TypeFieldFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Type typeField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Type TypeField {
      get { return typeField_; }
      set {
        typeField_ = value;
      }
    }

    /// <summary>Field number for the "double_field" field.</summary>
    public const int DoubleFieldFieldNumber = 10;
    private double? doubleField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? DoubleField {
      get { return doubleField_; }
      set {
        doubleField_ = value;
      }
    }

    /// <summary>Field number for the "float_field" field.</summary>
    public const int FloatFieldFieldNumber = 11;
    private float? floatField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? FloatField {
      get { return floatField_; }
      set {
        floatField_ = value;
      }
    }

    /// <summary>Field number for the "int64_field" field.</summary>
    public const int Int64FieldFieldNumber = 12;
    private long? int64Field_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Int64Field {
      get { return int64Field_; }
      set {
        int64Field_ = value;
      }
    }

    /// <summary>Field number for the "uint64_field" field.</summary>
    public const int Uint64FieldFieldNumber = 13;
    private ulong? uint64Field_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong? Uint64Field {
      get { return uint64Field_; }
      set {
        uint64Field_ = value;
      }
    }

    /// <summary>Field number for the "int32_field" field.</summary>
    public const int Int32FieldFieldNumber = 14;
    private int? int32Field_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Int32Field {
      get { return int32Field_; }
      set {
        int32Field_ = value;
      }
    }

    /// <summary>Field number for the "uint32_field" field.</summary>
    public const int Uint32FieldFieldNumber = 15;
    private uint? uint32Field_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? Uint32Field {
      get { return uint32Field_; }
      set {
        uint32Field_ = value;
      }
    }

    /// <summary>Field number for the "bool_field" field.</summary>
    public const int BoolFieldFieldNumber = 16;
    private bool? boolField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? BoolField {
      get { return boolField_; }
      set {
        boolField_ = value;
      }
    }

    /// <summary>Field number for the "string_field" field.</summary>
    public const int StringFieldFieldNumber = 17;
    private string stringField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringField {
      get { return stringField_; }
      set {
        stringField_ = value;
      }
    }

    /// <summary>Field number for the "bytes_field" field.</summary>
    public const int BytesFieldFieldNumber = 18;
    private pb::ByteString bytesField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesField {
      get { return bytesField_; }
      set {
        bytesField_ = value;
      }
    }

    /// <summary>Field number for the "value_field" field.</summary>
    public const int ValueFieldFieldNumber = 19;
    private global::Google.Protobuf.WellKnownTypes.Value valueField_;
    /// <summary>
    /// Part of struct, but useful to be able to test separately
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Value ValueField {
      get { return valueField_; }
      set {
        valueField_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestWellKnownTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestWellKnownTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AnyField, other.AnyField)) return false;
      if (!object.Equals(ApiField, other.ApiField)) return false;
      if (!object.Equals(DurationField, other.DurationField)) return false;
      if (!object.Equals(EmptyField, other.EmptyField)) return false;
      if (!object.Equals(FieldMaskField, other.FieldMaskField)) return false;
      if (!object.Equals(SourceContextField, other.SourceContextField)) return false;
      if (!object.Equals(StructField, other.StructField)) return false;
      if (!object.Equals(TimestampField, other.TimestampField)) return false;
      if (!object.Equals(TypeField, other.TypeField)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(DoubleField, other.DoubleField)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(FloatField, other.FloatField)) return false;
      if (Int64Field != other.Int64Field) return false;
      if (Uint64Field != other.Uint64Field) return false;
      if (Int32Field != other.Int32Field) return false;
      if (Uint32Field != other.Uint32Field) return false;
      if (BoolField != other.BoolField) return false;
      if (StringField != other.StringField) return false;
      if (BytesField != other.BytesField) return false;
      if (!object.Equals(ValueField, other.ValueField)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (anyField_ != null) hash ^= AnyField.GetHashCode();
      if (apiField_ != null) hash ^= ApiField.GetHashCode();
      if (durationField_ != null) hash ^= DurationField.GetHashCode();
      if (emptyField_ != null) hash ^= EmptyField.GetHashCode();
      if (fieldMaskField_ != null) hash ^= FieldMaskField.GetHashCode();
      if (sourceContextField_ != null) hash ^= SourceContextField.GetHashCode();
      if (structField_ != null) hash ^= StructField.GetHashCode();
      if (timestampField_ != null) hash ^= TimestampField.GetHashCode();
      if (typeField_ != null) hash ^= TypeField.GetHashCode();
      if (doubleField_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(DoubleField);
      if (floatField_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(FloatField);
      if (int64Field_ != null) hash ^= Int64Field.GetHashCode();
      if (uint64Field_ != null) hash ^= Uint64Field.GetHashCode();
      if (int32Field_ != null) hash ^= Int32Field.GetHashCode();
      if (uint32Field_ != null) hash ^= Uint32Field.GetHashCode();
      if (boolField_ != null) hash ^= BoolField.GetHashCode();
      if (stringField_ != null) hash ^= StringField.GetHashCode();
      if (bytesField_ != null) hash ^= BytesField.GetHashCode();
      if (valueField_ != null) hash ^= ValueField.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void WriteTo(pb::CodedOutputStream output, ref global::System.Span<byte> immediateBuffer) {
      if (AnyField != null) {
        output.WriteRawTag(10, ref immediateBuffer);
        output.WriteLength(AnyField.CalculateSize(), ref immediateBuffer);
        AnyField.WriteTo(output, ref immediateBuffer);
      }
      if (ApiField != null) {
        output.WriteRawTag(18, ref immediateBuffer);
        output.WriteLength(ApiField.CalculateSize(), ref immediateBuffer);
        ApiField.WriteTo(output, ref immediateBuffer);
      }
      if (DurationField != null) {
        output.WriteRawTag(26, ref immediateBuffer);
        output.WriteLength(DurationField.CalculateSize(), ref immediateBuffer);
        DurationField.WriteTo(output, ref immediateBuffer);
      }
      if (EmptyField != null) {
        output.WriteRawTag(34, ref immediateBuffer);
        output.WriteLength(EmptyField.CalculateSize(), ref immediateBuffer);
        EmptyField.WriteTo(output, ref immediateBuffer);
      }
      if (FieldMaskField != null) {
        output.WriteRawTag(42, ref immediateBuffer);
        output.WriteLength(FieldMaskField.CalculateSize(), ref immediateBuffer);
        FieldMaskField.WriteTo(output, ref immediateBuffer);
      }
      if (SourceContextField != null) {
        output.WriteRawTag(50, ref immediateBuffer);
        output.WriteLength(SourceContextField.CalculateSize(), ref immediateBuffer);
        SourceContextField.WriteTo(output, ref immediateBuffer);
      }
      if (StructField != null) {
        output.WriteRawTag(58, ref immediateBuffer);
        output.WriteLength(StructField.CalculateSize(), ref immediateBuffer);
        StructField.WriteTo(output, ref immediateBuffer);
      }
      if (TimestampField != null) {
        output.WriteRawTag(66, ref immediateBuffer);
        output.WriteLength(TimestampField.CalculateSize(), ref immediateBuffer);
        TimestampField.WriteTo(output, ref immediateBuffer);
      }
      if (TypeField != null) {
        output.WriteRawTag(74, ref immediateBuffer);
        output.WriteLength(TypeField.CalculateSize(), ref immediateBuffer);
        TypeField.WriteTo(output, ref immediateBuffer);
      }
      if (DoubleField != null) {
        output.WriteRawTag(82, ref immediateBuffer);
        output.WriteWrappedDouble(DoubleField, ref immediateBuffer);
      }
      if (FloatField != null) {
        output.WriteRawTag(90, ref immediateBuffer);
        output.WriteWrappedFloat(FloatField, ref immediateBuffer);
      }
      if (Int64Field != null) {
        output.WriteRawTag(98, ref immediateBuffer);
        output.WriteWrappedInt64(Int64Field, ref immediateBuffer);
      }
      if (Uint64Field != null) {
        output.WriteRawTag(106, ref immediateBuffer);
        output.WriteWrappedUInt64(Uint64Field, ref immediateBuffer);
      }
      if (Int32Field != null) {
        output.WriteRawTag(114, ref immediateBuffer);
        output.WriteWrappedInt32(Int32Field, ref immediateBuffer);
      }
      if (Uint32Field != null) {
        output.WriteRawTag(122, ref immediateBuffer);
        output.WriteWrappedUInt32(Uint32Field, ref immediateBuffer);
      }
      if (BoolField != null) {
        output.WriteRawTag(130, 1, ref immediateBuffer);
        output.WriteWrappedBool(BoolField, ref immediateBuffer);
      }
      if (StringField != null) {
        output.WriteRawTag(138, 1, ref immediateBuffer);
        output.WriteWrappedString(StringField, ref immediateBuffer);
      }
      if (BytesField != null) {
        output.WriteRawTag(146, 1, ref immediateBuffer);
        output.WriteWrappedBytes(BytesField, ref immediateBuffer);
      }
      if (ValueField != null) {
        output.WriteRawTag(154, 1, ref immediateBuffer);
        output.WriteLength(ValueField.CalculateSize(), ref immediateBuffer);
        ValueField.WriteTo(output, ref immediateBuffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output, ref immediateBuffer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnyField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnyField);
      }
      if (ApiField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiField);
      }
      if (DurationField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationField);
      }
      if (EmptyField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmptyField);
      }
      if (FieldMaskField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldMaskField);
      }
      if (SourceContextField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceContextField);
      }
      if (StructField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructField);
      }
      if (TimestampField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampField);
      }
      if (TypeField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeField);
      }
      if (DoubleField != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedDoubleSize(DoubleField);
      }
      if (FloatField != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedFloatSize(FloatField);
      }
      if (Int64Field != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt64Size(Int64Field);
      }
      if (Uint64Field != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt64Size(Uint64Field);
      }
      if (Int32Field != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt32Size(Int32Field);
      }
      if (Uint32Field != null) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt32Size(Uint32Field);
      }
      if (BoolField != null) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBoolSize(BoolField);
      }
      if (StringField != null) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedStringSize(StringField);
      }
      if (BytesField != null) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBytesSize(BytesField);
      }
      if (ValueField != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueField);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestWellKnownTypes other) {
      if (other == null) {
        return;
      }
      if (other.anyField_ != null) {
        if (anyField_ == null) {
          anyField_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        AnyField.MergeFrom(other.AnyField);
      }
      if (other.apiField_ != null) {
        if (apiField_ == null) {
          apiField_ = new global::Google.Protobuf.WellKnownTypes.Api();
        }
        ApiField.MergeFrom(other.ApiField);
      }
      if (other.durationField_ != null) {
        if (durationField_ == null) {
          durationField_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DurationField.MergeFrom(other.DurationField);
      }
      if (other.emptyField_ != null) {
        if (emptyField_ == null) {
          emptyField_ = new global::Google.Protobuf.WellKnownTypes.Empty();
        }
        EmptyField.MergeFrom(other.EmptyField);
      }
      if (other.fieldMaskField_ != null) {
        if (fieldMaskField_ == null) {
          fieldMaskField_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        FieldMaskField.MergeFrom(other.FieldMaskField);
      }
      if (other.sourceContextField_ != null) {
        if (sourceContextField_ == null) {
          sourceContextField_ = new global::Google.Protobuf.WellKnownTypes.SourceContext();
        }
        SourceContextField.MergeFrom(other.SourceContextField);
      }
      if (other.structField_ != null) {
        if (structField_ == null) {
          structField_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        StructField.MergeFrom(other.StructField);
      }
      if (other.timestampField_ != null) {
        if (timestampField_ == null) {
          timestampField_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimestampField.MergeFrom(other.TimestampField);
      }
      if (other.typeField_ != null) {
        if (typeField_ == null) {
          typeField_ = new global::Google.Protobuf.WellKnownTypes.Type();
        }
        TypeField.MergeFrom(other.TypeField);
      }
      if (other.doubleField_ != null) {
        if (doubleField_ == null || other.DoubleField != 0D) {
          DoubleField = other.DoubleField;
        }
      }
      if (other.floatField_ != null) {
        if (floatField_ == null || other.FloatField != 0F) {
          FloatField = other.FloatField;
        }
      }
      if (other.int64Field_ != null) {
        if (int64Field_ == null || other.Int64Field != 0L) {
          Int64Field = other.Int64Field;
        }
      }
      if (other.uint64Field_ != null) {
        if (uint64Field_ == null || other.Uint64Field != 0UL) {
          Uint64Field = other.Uint64Field;
        }
      }
      if (other.int32Field_ != null) {
        if (int32Field_ == null || other.Int32Field != 0) {
          Int32Field = other.Int32Field;
        }
      }
      if (other.uint32Field_ != null) {
        if (uint32Field_ == null || other.Uint32Field != 0) {
          Uint32Field = other.Uint32Field;
        }
      }
      if (other.boolField_ != null) {
        if (boolField_ == null || other.BoolField != false) {
          BoolField = other.BoolField;
        }
      }
      if (other.stringField_ != null) {
        if (stringField_ == null || other.StringField != "") {
          StringField = other.StringField;
        }
      }
      if (other.bytesField_ != null) {
        if (bytesField_ == null || other.BytesField != pb::ByteString.Empty) {
          BytesField = other.BytesField;
        }
      }
      if (other.valueField_ != null) {
        if (valueField_ == null) {
          valueField_ = new global::Google.Protobuf.WellKnownTypes.Value();
        }
        ValueField.MergeFrom(other.ValueField);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void MergeFrom(pb::CodedInputStream input, ref global::System.ReadOnlySpan<byte> immediateBuffer) {
      uint tag;
      while ((tag = input.ReadTag(ref immediateBuffer)) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input, ref immediateBuffer);
            break;
          case 10: {
            if (anyField_ == null) {
              anyField_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            anyField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 18: {
            if (apiField_ == null) {
              apiField_ = new global::Google.Protobuf.WellKnownTypes.Api();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            apiField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 26: {
            if (durationField_ == null) {
              durationField_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            durationField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 34: {
            if (emptyField_ == null) {
              emptyField_ = new global::Google.Protobuf.WellKnownTypes.Empty();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            emptyField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 42: {
            if (fieldMaskField_ == null) {
              fieldMaskField_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            fieldMaskField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 50: {
            if (sourceContextField_ == null) {
              sourceContextField_ = new global::Google.Protobuf.WellKnownTypes.SourceContext();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            sourceContextField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 58: {
            if (structField_ == null) {
              structField_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            structField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 66: {
            if (timestampField_ == null) {
              timestampField_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            timestampField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 74: {
            if (typeField_ == null) {
              typeField_ = new global::Google.Protobuf.WellKnownTypes.Type();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            typeField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
          case 82: {
            double? value = input.ReadWrappedDouble(ref immediateBuffer);
            if (DoubleField == null || value != 0D) {
              DoubleField = value;
            }
            break;
          }
          case 90: {
            float? value = input.ReadWrappedFloat(ref immediateBuffer);
            if (FloatField == null || value != 0F) {
              FloatField = value;
            }
            break;
          }
          case 98: {
            long? value = input.ReadWrappedInt64(ref immediateBuffer);
            if (Int64Field == null || value != 0L) {
              Int64Field = value;
            }
            break;
          }
          case 106: {
            ulong? value = input.ReadWrappedUInt64(ref immediateBuffer);
            if (Uint64Field == null || value != 0UL) {
              Uint64Field = value;
            }
            break;
          }
          case 114: {
            int? value = input.ReadWrappedInt32(ref immediateBuffer);
            if (Int32Field == null || value != 0) {
              Int32Field = value;
            }
            break;
          }
          case 122: {
            uint? value = input.ReadWrappedUInt32(ref immediateBuffer);
            if (Uint32Field == null || value != 0) {
              Uint32Field = value;
            }
            break;
          }
          case 130: {
            bool? value = input.ReadWrappedBool(ref immediateBuffer);
            if (BoolField == null || value != false) {
              BoolField = value;
            }
            break;
          }
          case 138: {
            string value = input.ReadWrappedString(ref immediateBuffer);
            if (StringField == null || value != "") {
              StringField = value;
            }
            break;
          }
          case 146: {
            pb::ByteString value = input.ReadWrappedBytes(ref immediateBuffer);
            if (BytesField == null || value != pb::ByteString.Empty) {
              BytesField = value;
            }
            break;
          }
          case 154: {
            if (valueField_ == null) {
              valueField_ = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            valueField_.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A repeated field for each well-known type.
  /// </summary>
  public sealed partial class RepeatedWellKnownTypes : pb::IMessage<RepeatedWellKnownTypes> {
    private static readonly pb::MessageParser<RepeatedWellKnownTypes> _parser = new pb::MessageParser<RepeatedWellKnownTypes>(() => new RepeatedWellKnownTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedWellKnownTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TestProtos.UnittestWellKnownTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedWellKnownTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedWellKnownTypes(RepeatedWellKnownTypes other) : this() {
      anyField_ = other.anyField_.Clone();
      apiField_ = other.apiField_.Clone();
      durationField_ = other.durationField_.Clone();
      emptyField_ = other.emptyField_.Clone();
      fieldMaskField_ = other.fieldMaskField_.Clone();
      sourceContextField_ = other.sourceContextField_.Clone();
      structField_ = other.structField_.Clone();
      timestampField_ = other.timestampField_.Clone();
      typeField_ = other.typeField_.Clone();
      doubleField_ = other.doubleField_.Clone();
      floatField_ = other.floatField_.Clone();
      int64Field_ = other.int64Field_.Clone();
      uint64Field_ = other.uint64Field_.Clone();
      int32Field_ = other.int32Field_.Clone();
      uint32Field_ = other.uint32Field_.Clone();
      boolField_ = other.boolField_.Clone();
      stringField_ = other.stringField_.Clone();
      bytesField_ = other.bytesField_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedWellKnownTypes Clone() {
      return new RepeatedWellKnownTypes(this);
    }

    /// <summary>Field number for the "any_field" field.</summary>
    public const int AnyFieldFieldNumber = 1;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> anyField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> AnyField {
      get { return anyField_; }
    }

    /// <summary>Field number for the "api_field" field.</summary>
    public const int ApiFieldFieldNumber = 2;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Api> apiField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Api>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Api> ApiField {
      get { return apiField_; }
    }

    /// <summary>Field number for the "duration_field" field.</summary>
    public const int DurationFieldFieldNumber = 3;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Duration> durationField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Duration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Duration> DurationField {
      get { return durationField_; }
    }

    /// <summary>Field number for the "empty_field" field.</summary>
    public const int EmptyFieldFieldNumber = 4;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Empty> emptyField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Empty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Empty> EmptyField {
      get { return emptyField_; }
    }

    /// <summary>Field number for the "field_mask_field" field.</summary>
    public const int FieldMaskFieldFieldNumber = 5;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.FieldMask> fieldMaskField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.FieldMask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.FieldMask> FieldMaskField {
      get { return fieldMaskField_; }
    }

    /// <summary>Field number for the "source_context_field" field.</summary>
    public const int SourceContextFieldFieldNumber = 6;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.SourceContext> sourceContextField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.SourceContext>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.SourceContext> SourceContextField {
      get { return sourceContextField_; }
    }

    /// <summary>Field number for the "struct_field" field.</summary>
    public const int StructFieldFieldNumber = 7;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Struct> structField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Struct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Struct> StructField {
      get { return structField_; }
    }

    /// <summary>Field number for the "timestamp_field" field.</summary>
    public const int TimestampFieldFieldNumber = 8;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> timestampField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> TimestampField {
      get { return timestampField_; }
    }

    /// <summary>Field number for the "type_field" field.</summary>
    public const int TypeFieldFieldNumber = 9;
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Type> typeField_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Type>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Type> TypeField {
      get { return typeField_; }
    }

    /// <summary>Field number for the "double_field" field.</summary>
    public const int DoubleFieldFieldNumber = 10;
    private readonly pbc::RepeatedField<double?> doubleField_ = new pbc::RepeatedField<double?>();
    /// <summary>
    /// These don't actually make a lot of sense, but they're not prohibited...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double?> DoubleField {
      get { return doubleField_; }
    }

    /// <summary>Field number for the "float_field" field.</summary>
    public const int FloatFieldFieldNumber = 11;
    private readonly pbc::RepeatedField<float?> floatField_ = new pbc::RepeatedField<float?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float?> FloatField {
      get { return floatField_; }
    }

    /// <summary>Field number for the "int64_field" field.</summary>
    public const int Int64FieldFieldNumber = 12;
    private readonly pbc::RepeatedField<long?> int64Field_ = new pbc::RepeatedField<long?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long?> Int64Field {
      get { return int64Field_; }
    }

    /// <summary>Field number for the "uint64_field" field.</summary>
    public const int Uint64FieldFieldNumber = 13;
    private readonly pbc::RepeatedField<ulong?> uint64Field_ = new pbc::RepeatedField<ulong?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong?> Uint64Field {
      get { return uint64Field_; }
    }

    /// <summary>Field number for the "int32_field" field.</summary>
    public const int Int32FieldFieldNumber = 14;
    private readonly pbc::RepeatedField<int?> int32Field_ = new pbc::RepeatedField<int?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int?> Int32Field {
      get { return int32Field_; }
    }

    /// <summary>Field number for the "uint32_field" field.</summary>
    public const int Uint32FieldFieldNumber = 15;
    private readonly pbc::RepeatedField<uint?> uint32Field_ = new pbc::RepeatedField<uint?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint?> Uint32Field {
      get { return uint32Field_; }
    }

    /// <summary>Field number for the "bool_field" field.</summary>
    public const int BoolFieldFieldNumber = 16;
    private readonly pbc::RepeatedField<bool?> boolField_ = new pbc::RepeatedField<bool?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool?> BoolField {
      get { return boolField_; }
    }

    /// <summary>Field number for the "string_field" field.</summary>
    public const int StringFieldFieldNumber = 17;
    private readonly pbc::RepeatedField<string> stringField_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringField {
      get { return stringField_; }
    }

    /// <summary>Field number for the "bytes_field" field.</summary>
    public const int BytesFieldFieldNumber = 18;
    private readonly pbc::RepeatedField<pb::ByteString> bytesField_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> BytesField {
      get { return bytesField_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedWellKnownTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedWellKnownTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!anyField_.Equals(other.anyField_)) return false;
      if(!apiField_.Equals(other.apiField_)) return false;
      if(!durationField_.Equals(other.durationField_)) return false;
      if(!emptyField_.Equals(other.emptyField_)) return false;
      if(!fieldMaskField_.Equals(other.fieldMaskField_)) return false;
      if(!sourceContextField_.Equals(other.sourceContextField_)) return false;
      if(!structField_.Equals(other.structField_)) return false;
      if(!timestampField_.Equals(other.timestampField_)) return false;
      if(!typeField_.Equals(other.typeField_)) return false;
      if(!doubleField_.Equals(other.doubleField_)) return false;
      if(!floatField_.Equals(other.floatField_)) return false;
      if(!int64Field_.Equals(other.int64Field_)) return false;
      if(!uint64Field_.Equals(other.uint64Field_)) return false;
      if(!int32Field_.Equals(other.int32Field_)) return false;
      if(!uint32Field_.Equals(other.uint32Field_)) return false;
      if(!boolField_.Equals(other.boolField_)) return false;
      if(!stringField_.Equals(other.stringField_)) return false;
      if(!bytesField_.Equals(other.bytesField_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= anyField_.GetHashCode();
      hash ^= apiField_.GetHashCode();
      hash ^= durationField_.GetHashCode();
      hash ^= emptyField_.GetHashCode();
      hash ^= fieldMaskField_.GetHashCode();
      hash ^= sourceContextField_.GetHashCode();
      hash ^= structField_.GetHashCode();
      hash ^= timestampField_.GetHashCode();
      hash ^= typeField_.GetHashCode();
      hash ^= doubleField_.GetHashCode();
      hash ^= floatField_.GetHashCode();
      hash ^= int64Field_.GetHashCode();
      hash ^= uint64Field_.GetHashCode();
      hash ^= int32Field_.GetHashCode();
      hash ^= uint32Field_.GetHashCode();
      hash ^= boolField_.GetHashCode();
      hash ^= stringField_.GetHashCode();
      hash ^= bytesField_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void WriteTo(pb::CodedOutputStream output, ref global::System.Span<byte> immediateBuffer) {
      for (var i = 0; i < AnyField.Count; i++) {
        output.WriteRawTag(10, ref immediateBuffer);
        output.WriteLength(AnyField[i].CalculateSize(), ref immediateBuffer);
        AnyField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < ApiField.Count; i++) {
        output.WriteRawTag(18, ref immediateBuffer);
        output.WriteLength(ApiField[i].CalculateSize(), ref immediateBuffer);
        ApiField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < DurationField.Count; i++) {
        output.WriteRawTag(26, ref immediateBuffer);
        output.WriteLength(DurationField[i].CalculateSize(), ref immediateBuffer);
        DurationField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < EmptyField.Count; i++) {
        output.WriteRawTag(34, ref immediateBuffer);
        output.WriteLength(EmptyField[i].CalculateSize(), ref immediateBuffer);
        EmptyField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < FieldMaskField.Count; i++) {
        output.WriteRawTag(42, ref immediateBuffer);
        output.WriteLength(FieldMaskField[i].CalculateSize(), ref immediateBuffer);
        FieldMaskField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < SourceContextField.Count; i++) {
        output.WriteRawTag(50, ref immediateBuffer);
        output.WriteLength(SourceContextField[i].CalculateSize(), ref immediateBuffer);
        SourceContextField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < StructField.Count; i++) {
        output.WriteRawTag(58, ref immediateBuffer);
        output.WriteLength(StructField[i].CalculateSize(), ref immediateBuffer);
        StructField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < TimestampField.Count; i++) {
        output.WriteRawTag(66, ref immediateBuffer);
        output.WriteLength(TimestampField[i].CalculateSize(), ref immediateBuffer);
        TimestampField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < TypeField.Count; i++) {
        output.WriteRawTag(74, ref immediateBuffer);
        output.WriteLength(TypeField[i].CalculateSize(), ref immediateBuffer);
        TypeField[i].WriteTo(output, ref immediateBuffer);
      }
      for (var i = 0; i < DoubleField.Count; i++) {
        output.WriteRawTag(82, ref immediateBuffer);
        output.WriteWrappedDouble(DoubleField[i], ref immediateBuffer);
      }
      for (var i = 0; i < FloatField.Count; i++) {
        output.WriteRawTag(90, ref immediateBuffer);
        output.WriteWrappedFloat(FloatField[i], ref immediateBuffer);
      }
      for (var i = 0; i < Int64Field.Count; i++) {
        output.WriteRawTag(98, ref immediateBuffer);
        output.WriteWrappedInt64(Int64Field[i], ref immediateBuffer);
      }
      for (var i = 0; i < Uint64Field.Count; i++) {
        output.WriteRawTag(106, ref immediateBuffer);
        output.WriteWrappedUInt64(Uint64Field[i], ref immediateBuffer);
      }
      for (var i = 0; i < Int32Field.Count; i++) {
        output.WriteRawTag(114, ref immediateBuffer);
        output.WriteWrappedInt32(Int32Field[i], ref immediateBuffer);
      }
      for (var i = 0; i < Uint32Field.Count; i++) {
        output.WriteRawTag(122, ref immediateBuffer);
        output.WriteWrappedUInt32(Uint32Field[i], ref immediateBuffer);
      }
      for (var i = 0; i < BoolField.Count; i++) {
        output.WriteRawTag(130, 1, ref immediateBuffer);
        output.WriteWrappedBool(BoolField[i], ref immediateBuffer);
      }
      for (var i = 0; i < StringField.Count; i++) {
        output.WriteRawTag(138, 1, ref immediateBuffer);
        output.WriteWrappedString(StringField[i], ref immediateBuffer);
      }
      for (var i = 0; i < BytesField.Count; i++) {
        output.WriteRawTag(146, 1, ref immediateBuffer);
        output.WriteWrappedBytes(BytesField[i], ref immediateBuffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output, ref immediateBuffer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      for (var i = 0; i < AnyField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnyField[i]);
      }
      for (var i = 0; i < ApiField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiField[i]);
      }
      for (var i = 0; i < DurationField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationField[i]);
      }
      for (var i = 0; i < EmptyField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmptyField[i]);
      }
      for (var i = 0; i < FieldMaskField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldMaskField[i]);
      }
      for (var i = 0; i < SourceContextField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceContextField[i]);
      }
      for (var i = 0; i < StructField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructField[i]);
      }
      for (var i = 0; i < TimestampField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampField[i]);
      }
      for (var i = 0; i < TypeField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeField[i]);
      }
      for (var i = 0; i < DoubleField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedDoubleSize(DoubleField[i]);
      }
      for (var i = 0; i < FloatField.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedFloatSize(FloatField[i]);
      }
      for (var i = 0; i < Int64Field.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt64Size(Int64Field[i]);
      }
      for (var i = 0; i < Uint64Field.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt64Size(Uint64Field[i]);
      }
      for (var i = 0; i < Int32Field.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt32Size(Int32Field[i]);
      }
      for (var i = 0; i < Uint32Field.Count; i++) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt32Size(Uint32Field[i]);
      }
      for (var i = 0; i < BoolField.Count; i++) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBoolSize(BoolField[i]);
      }
      for (var i = 0; i < StringField.Count; i++) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedStringSize(StringField[i]);
      }
      for (var i = 0; i < BytesField.Count; i++) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBytesSize(BytesField[i]);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedWellKnownTypes other) {
      if (other == null) {
        return;
      }
      anyField_.Add(other.anyField_);
      apiField_.Add(other.apiField_);
      durationField_.Add(other.durationField_);
      emptyField_.Add(other.emptyField_);
      fieldMaskField_.Add(other.fieldMaskField_);
      sourceContextField_.Add(other.sourceContextField_);
      structField_.Add(other.structField_);
      timestampField_.Add(other.timestampField_);
      typeField_.Add(other.typeField_);
      doubleField_.Add(other.doubleField_);
      floatField_.Add(other.floatField_);
      int64Field_.Add(other.int64Field_);
      uint64Field_.Add(other.uint64Field_);
      int32Field_.Add(other.int32Field_);
      uint32Field_.Add(other.uint32Field_);
      boolField_.Add(other.boolField_);
      stringField_.Add(other.stringField_);
      bytesField_.Add(other.bytesField_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void MergeFrom(pb::CodedInputStream input, ref global::System.ReadOnlySpan<byte> immediateBuffer) {
      uint tag;
      while ((tag = input.ReadTag(ref immediateBuffer)) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input, ref immediateBuffer);
            break;
          case 10: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Any();
            item.MergeFrom(input, ref immediateBuffer);
            anyField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 18: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Api();
            item.MergeFrom(input, ref immediateBuffer);
            apiField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 26: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Duration();
            item.MergeFrom(input, ref immediateBuffer);
            durationField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 34: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Empty();
            item.MergeFrom(input, ref immediateBuffer);
            emptyField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 42: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            item.MergeFrom(input, ref immediateBuffer);
            fieldMaskField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 50: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.SourceContext();
            item.MergeFrom(input, ref immediateBuffer);
            sourceContextField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 58: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Struct();
            item.MergeFrom(input, ref immediateBuffer);
            structField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 66: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            item.MergeFrom(input, ref immediateBuffer);
            timestampField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 74: {
            var repeatedOldLimit = input.BeginReadNested(ref immediateBuffer);var item = new global::Google.Protobuf.WellKnownTypes.Type();
            item.MergeFrom(input, ref immediateBuffer);
            typeField_.Add(item);
            input.EndReadNested(repeatedOldLimit);
            break;
          }
          case 82: {
            doubleField_.Add(input.ReadWrappedDouble(ref immediateBuffer));
            break;
          }
          case 90: {
            floatField_.Add(input.ReadWrappedFloat(ref immediateBuffer));
            break;
          }
          case 98: {
            int64Field_.Add(input.ReadWrappedInt64(ref immediateBuffer));
            break;
          }
          case 106: {
            uint64Field_.Add(input.ReadWrappedUInt64(ref immediateBuffer));
            break;
          }
          case 114: {
            int32Field_.Add(input.ReadWrappedInt32(ref immediateBuffer));
            break;
          }
          case 122: {
            uint32Field_.Add(input.ReadWrappedUInt32(ref immediateBuffer));
            break;
          }
          case 130: {
            boolField_.Add(input.ReadWrappedBool(ref immediateBuffer));
            break;
          }
          case 138: {
            stringField_.Add(input.ReadWrappedString(ref immediateBuffer));
            break;
          }
          case 146: {
            bytesField_.Add(input.ReadWrappedBytes(ref immediateBuffer));
            break;
          }
        }
      }
    }

  }

  public sealed partial class OneofWellKnownTypes : pb::IMessage<OneofWellKnownTypes> {
    private static readonly pb::MessageParser<OneofWellKnownTypes> _parser = new pb::MessageParser<OneofWellKnownTypes>(() => new OneofWellKnownTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OneofWellKnownTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TestProtos.UnittestWellKnownTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofWellKnownTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofWellKnownTypes(OneofWellKnownTypes other) : this() {
      switch (other.OneofFieldCase) {
        case OneofFieldOneofCase.AnyField:
          AnyField = other.AnyField.Clone();
          break;
        case OneofFieldOneofCase.ApiField:
          ApiField = other.ApiField.Clone();
          break;
        case OneofFieldOneofCase.DurationField:
          DurationField = other.DurationField.Clone();
          break;
        case OneofFieldOneofCase.EmptyField:
          EmptyField = other.EmptyField.Clone();
          break;
        case OneofFieldOneofCase.FieldMaskField:
          FieldMaskField = other.FieldMaskField.Clone();
          break;
        case OneofFieldOneofCase.SourceContextField:
          SourceContextField = other.SourceContextField.Clone();
          break;
        case OneofFieldOneofCase.StructField:
          StructField = other.StructField.Clone();
          break;
        case OneofFieldOneofCase.TimestampField:
          TimestampField = other.TimestampField.Clone();
          break;
        case OneofFieldOneofCase.TypeField:
          TypeField = other.TypeField.Clone();
          break;
        case OneofFieldOneofCase.DoubleField:
          DoubleField = other.DoubleField;
          break;
        case OneofFieldOneofCase.FloatField:
          FloatField = other.FloatField;
          break;
        case OneofFieldOneofCase.Int64Field:
          Int64Field = other.Int64Field;
          break;
        case OneofFieldOneofCase.Uint64Field:
          Uint64Field = other.Uint64Field;
          break;
        case OneofFieldOneofCase.Int32Field:
          Int32Field = other.Int32Field;
          break;
        case OneofFieldOneofCase.Uint32Field:
          Uint32Field = other.Uint32Field;
          break;
        case OneofFieldOneofCase.BoolField:
          BoolField = other.BoolField;
          break;
        case OneofFieldOneofCase.StringField:
          StringField = other.StringField;
          break;
        case OneofFieldOneofCase.BytesField:
          BytesField = other.BytesField;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofWellKnownTypes Clone() {
      return new OneofWellKnownTypes(this);
    }

    /// <summary>Field number for the "any_field" field.</summary>
    public const int AnyFieldFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any AnyField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.AnyField ? (global::Google.Protobuf.WellKnownTypes.Any) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.AnyField;
      }
    }

    /// <summary>Field number for the "api_field" field.</summary>
    public const int ApiFieldFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Api ApiField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.ApiField ? (global::Google.Protobuf.WellKnownTypes.Api) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.ApiField;
      }
    }

    /// <summary>Field number for the "duration_field" field.</summary>
    public const int DurationFieldFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration DurationField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.DurationField ? (global::Google.Protobuf.WellKnownTypes.Duration) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.DurationField;
      }
    }

    /// <summary>Field number for the "empty_field" field.</summary>
    public const int EmptyFieldFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty EmptyField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.EmptyField ? (global::Google.Protobuf.WellKnownTypes.Empty) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.EmptyField;
      }
    }

    /// <summary>Field number for the "field_mask_field" field.</summary>
    public const int FieldMaskFieldFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask FieldMaskField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.FieldMaskField ? (global::Google.Protobuf.WellKnownTypes.FieldMask) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.FieldMaskField;
      }
    }

    /// <summary>Field number for the "source_context_field" field.</summary>
    public const int SourceContextFieldFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.SourceContext SourceContextField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.SourceContextField ? (global::Google.Protobuf.WellKnownTypes.SourceContext) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.SourceContextField;
      }
    }

    /// <summary>Field number for the "struct_field" field.</summary>
    public const int StructFieldFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct StructField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.StructField ? (global::Google.Protobuf.WellKnownTypes.Struct) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.StructField;
      }
    }

    /// <summary>Field number for the "timestamp_field" field.</summary>
    public const int TimestampFieldFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.TimestampField ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.TimestampField;
      }
    }

    /// <summary>Field number for the "type_field" field.</summary>
    public const int TypeFieldFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Type TypeField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.TypeField ? (global::Google.Protobuf.WellKnownTypes.Type) oneofField_ : null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.TypeField;
      }
    }

    /// <summary>Field number for the "double_field" field.</summary>
    public const int DoubleFieldFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? DoubleField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.DoubleField ? (double?) oneofField_ : (double?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.DoubleField;
      }
    }

    /// <summary>Field number for the "float_field" field.</summary>
    public const int FloatFieldFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? FloatField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.FloatField ? (float?) oneofField_ : (float?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.FloatField;
      }
    }

    /// <summary>Field number for the "int64_field" field.</summary>
    public const int Int64FieldFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Int64Field {
      get { return oneofFieldCase_ == OneofFieldOneofCase.Int64Field ? (long?) oneofField_ : (long?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.Int64Field;
      }
    }

    /// <summary>Field number for the "uint64_field" field.</summary>
    public const int Uint64FieldFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong? Uint64Field {
      get { return oneofFieldCase_ == OneofFieldOneofCase.Uint64Field ? (ulong?) oneofField_ : (ulong?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.Uint64Field;
      }
    }

    /// <summary>Field number for the "int32_field" field.</summary>
    public const int Int32FieldFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Int32Field {
      get { return oneofFieldCase_ == OneofFieldOneofCase.Int32Field ? (int?) oneofField_ : (int?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.Int32Field;
      }
    }

    /// <summary>Field number for the "uint32_field" field.</summary>
    public const int Uint32FieldFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? Uint32Field {
      get { return oneofFieldCase_ == OneofFieldOneofCase.Uint32Field ? (uint?) oneofField_ : (uint?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.Uint32Field;
      }
    }

    /// <summary>Field number for the "bool_field" field.</summary>
    public const int BoolFieldFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? BoolField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.BoolField ? (bool?) oneofField_ : (bool?) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.BoolField;
      }
    }

    /// <summary>Field number for the "string_field" field.</summary>
    public const int StringFieldFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.StringField ? (string) oneofField_ : (string) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.StringField;
      }
    }

    /// <summary>Field number for the "bytes_field" field.</summary>
    public const int BytesFieldFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesField {
      get { return oneofFieldCase_ == OneofFieldOneofCase.BytesField ? (pb::ByteString) oneofField_ : (pb::ByteString) null; }
      set {
        oneofField_ = value;
        oneofFieldCase_ = value == null ? OneofFieldOneofCase.None : OneofFieldOneofCase.BytesField;
      }
    }

    private object oneofField_;
    /// <summary>Enum of possible cases for the "oneof_field" oneof.</summary>
    public enum OneofFieldOneofCase {
      None = 0,
      AnyField = 1,
      ApiField = 2,
      DurationField = 3,
      EmptyField = 4,
      FieldMaskField = 5,
      SourceContextField = 6,
      StructField = 7,
      TimestampField = 8,
      TypeField = 9,
      DoubleField = 10,
      FloatField = 11,
      Int64Field = 12,
      Uint64Field = 13,
      Int32Field = 14,
      Uint32Field = 15,
      BoolField = 16,
      StringField = 17,
      BytesField = 18,
    }
    private OneofFieldOneofCase oneofFieldCase_ = OneofFieldOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofFieldOneofCase OneofFieldCase {
      get { return oneofFieldCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofField() {
      oneofFieldCase_ = OneofFieldOneofCase.None;
      oneofField_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OneofWellKnownTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OneofWellKnownTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AnyField, other.AnyField)) return false;
      if (!object.Equals(ApiField, other.ApiField)) return false;
      if (!object.Equals(DurationField, other.DurationField)) return false;
      if (!object.Equals(EmptyField, other.EmptyField)) return false;
      if (!object.Equals(FieldMaskField, other.FieldMaskField)) return false;
      if (!object.Equals(SourceContextField, other.SourceContextField)) return false;
      if (!object.Equals(StructField, other.StructField)) return false;
      if (!object.Equals(TimestampField, other.TimestampField)) return false;
      if (!object.Equals(TypeField, other.TypeField)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(DoubleField, other.DoubleField)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(FloatField, other.FloatField)) return false;
      if (Int64Field != other.Int64Field) return false;
      if (Uint64Field != other.Uint64Field) return false;
      if (Int32Field != other.Int32Field) return false;
      if (Uint32Field != other.Uint32Field) return false;
      if (BoolField != other.BoolField) return false;
      if (StringField != other.StringField) return false;
      if (BytesField != other.BytesField) return false;
      if (OneofFieldCase != other.OneofFieldCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneofFieldCase_ == OneofFieldOneofCase.AnyField) hash ^= AnyField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.ApiField) hash ^= ApiField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.DurationField) hash ^= DurationField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.EmptyField) hash ^= EmptyField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.FieldMaskField) hash ^= FieldMaskField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.SourceContextField) hash ^= SourceContextField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.StructField) hash ^= StructField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.TimestampField) hash ^= TimestampField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.TypeField) hash ^= TypeField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.DoubleField) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(DoubleField);
      if (oneofFieldCase_ == OneofFieldOneofCase.FloatField) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(FloatField);
      if (oneofFieldCase_ == OneofFieldOneofCase.Int64Field) hash ^= Int64Field.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint64Field) hash ^= Uint64Field.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.Int32Field) hash ^= Int32Field.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint32Field) hash ^= Uint32Field.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.BoolField) hash ^= BoolField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.StringField) hash ^= StringField.GetHashCode();
      if (oneofFieldCase_ == OneofFieldOneofCase.BytesField) hash ^= BytesField.GetHashCode();
      hash ^= (int) oneofFieldCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void WriteTo(pb::CodedOutputStream output, ref global::System.Span<byte> immediateBuffer) {
      if (AnyField != null) {
        output.WriteRawTag(10, ref immediateBuffer);
        output.WriteLength(AnyField.CalculateSize(), ref immediateBuffer);
        AnyField.WriteTo(output, ref immediateBuffer);
      }
      if (ApiField != null) {
        output.WriteRawTag(18, ref immediateBuffer);
        output.WriteLength(ApiField.CalculateSize(), ref immediateBuffer);
        ApiField.WriteTo(output, ref immediateBuffer);
      }
      if (DurationField != null) {
        output.WriteRawTag(26, ref immediateBuffer);
        output.WriteLength(DurationField.CalculateSize(), ref immediateBuffer);
        DurationField.WriteTo(output, ref immediateBuffer);
      }
      if (EmptyField != null) {
        output.WriteRawTag(34, ref immediateBuffer);
        output.WriteLength(EmptyField.CalculateSize(), ref immediateBuffer);
        EmptyField.WriteTo(output, ref immediateBuffer);
      }
      if (FieldMaskField != null) {
        output.WriteRawTag(42, ref immediateBuffer);
        output.WriteLength(FieldMaskField.CalculateSize(), ref immediateBuffer);
        FieldMaskField.WriteTo(output, ref immediateBuffer);
      }
      if (SourceContextField != null) {
        output.WriteRawTag(50, ref immediateBuffer);
        output.WriteLength(SourceContextField.CalculateSize(), ref immediateBuffer);
        SourceContextField.WriteTo(output, ref immediateBuffer);
      }
      if (StructField != null) {
        output.WriteRawTag(58, ref immediateBuffer);
        output.WriteLength(StructField.CalculateSize(), ref immediateBuffer);
        StructField.WriteTo(output, ref immediateBuffer);
      }
      if (TimestampField != null) {
        output.WriteRawTag(66, ref immediateBuffer);
        output.WriteLength(TimestampField.CalculateSize(), ref immediateBuffer);
        TimestampField.WriteTo(output, ref immediateBuffer);
      }
      if (TypeField != null) {
        output.WriteRawTag(74, ref immediateBuffer);
        output.WriteLength(TypeField.CalculateSize(), ref immediateBuffer);
        TypeField.WriteTo(output, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.DoubleField) {
        output.WriteRawTag(82, ref immediateBuffer);
        output.WriteWrappedDouble(DoubleField, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.FloatField) {
        output.WriteRawTag(90, ref immediateBuffer);
        output.WriteWrappedFloat(FloatField, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Int64Field) {
        output.WriteRawTag(98, ref immediateBuffer);
        output.WriteWrappedInt64(Int64Field, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint64Field) {
        output.WriteRawTag(106, ref immediateBuffer);
        output.WriteWrappedUInt64(Uint64Field, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Int32Field) {
        output.WriteRawTag(114, ref immediateBuffer);
        output.WriteWrappedInt32(Int32Field, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint32Field) {
        output.WriteRawTag(122, ref immediateBuffer);
        output.WriteWrappedUInt32(Uint32Field, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.BoolField) {
        output.WriteRawTag(130, 1, ref immediateBuffer);
        output.WriteWrappedBool(BoolField, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.StringField) {
        output.WriteRawTag(138, 1, ref immediateBuffer);
        output.WriteWrappedString(StringField, ref immediateBuffer);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.BytesField) {
        output.WriteRawTag(146, 1, ref immediateBuffer);
        output.WriteWrappedBytes(BytesField, ref immediateBuffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output, ref immediateBuffer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnyField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnyField);
      }
      if (ApiField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiField);
      }
      if (DurationField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationField);
      }
      if (EmptyField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmptyField);
      }
      if (FieldMaskField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldMaskField);
      }
      if (SourceContextField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceContextField);
      }
      if (StructField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructField);
      }
      if (TimestampField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampField);
      }
      if (TypeField != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeField);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.DoubleField) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedDoubleSize(DoubleField);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.FloatField) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedFloatSize(FloatField);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Int64Field) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt64Size(Int64Field);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint64Field) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt64Size(Uint64Field);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Int32Field) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedInt32Size(Int32Field);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.Uint32Field) {
        size += 1 + pb::CodedOutputStream.ComputeWrappedUInt32Size(Uint32Field);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.BoolField) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBoolSize(BoolField);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.StringField) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedStringSize(StringField);
      }
      if (oneofFieldCase_ == OneofFieldOneofCase.BytesField) {
        size += 2 + pb::CodedOutputStream.ComputeWrappedBytesSize(BytesField);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OneofWellKnownTypes other) {
      if (other == null) {
        return;
      }
      switch (other.OneofFieldCase) {
        case OneofFieldOneofCase.AnyField:
          if (AnyField == null) {
            AnyField = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          AnyField.MergeFrom(other.AnyField);
          break;
        case OneofFieldOneofCase.ApiField:
          if (ApiField == null) {
            ApiField = new global::Google.Protobuf.WellKnownTypes.Api();
          }
          ApiField.MergeFrom(other.ApiField);
          break;
        case OneofFieldOneofCase.DurationField:
          if (DurationField == null) {
            DurationField = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          DurationField.MergeFrom(other.DurationField);
          break;
        case OneofFieldOneofCase.EmptyField:
          if (EmptyField == null) {
            EmptyField = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          EmptyField.MergeFrom(other.EmptyField);
          break;
        case OneofFieldOneofCase.FieldMaskField:
          if (FieldMaskField == null) {
            FieldMaskField = new global::Google.Protobuf.WellKnownTypes.FieldMask();
          }
          FieldMaskField.MergeFrom(other.FieldMaskField);
          break;
        case OneofFieldOneofCase.SourceContextField:
          if (SourceContextField == null) {
            SourceContextField = new global::Google.Protobuf.WellKnownTypes.SourceContext();
          }
          SourceContextField.MergeFrom(other.SourceContextField);
          break;
        case OneofFieldOneofCase.StructField:
          if (StructField == null) {
            StructField = new global::Google.Protobuf.WellKnownTypes.Struct();
          }
          StructField.MergeFrom(other.StructField);
          break;
        case OneofFieldOneofCase.TimestampField:
          if (TimestampField == null) {
            TimestampField = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          TimestampField.MergeFrom(other.TimestampField);
          break;
        case OneofFieldOneofCase.TypeField:
          if (TypeField == null) {
            TypeField = new global::Google.Protobuf.WellKnownTypes.Type();
          }
          TypeField.MergeFrom(other.TypeField);
          break;
        case OneofFieldOneofCase.DoubleField:
          DoubleField = other.DoubleField;
          break;
        case OneofFieldOneofCase.FloatField:
          FloatField = other.FloatField;
          break;
        case OneofFieldOneofCase.Int64Field:
          Int64Field = other.Int64Field;
          break;
        case OneofFieldOneofCase.Uint64Field:
          Uint64Field = other.Uint64Field;
          break;
        case OneofFieldOneofCase.Int32Field:
          Int32Field = other.Int32Field;
          break;
        case OneofFieldOneofCase.Uint32Field:
          Uint32Field = other.Uint32Field;
          break;
        case OneofFieldOneofCase.BoolField:
          BoolField = other.BoolField;
          break;
        case OneofFieldOneofCase.StringField:
          StringField = other.StringField;
          break;
        case OneofFieldOneofCase.BytesField:
          BytesField = other.BytesField;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void MergeFrom(pb::CodedInputStream input, ref global::System.ReadOnlySpan<byte> immediateBuffer) {
      uint tag;
      while ((tag = input.ReadTag(ref immediateBuffer)) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input, ref immediateBuffer);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (oneofFieldCase_ == OneofFieldOneofCase.AnyField) {
              subBuilder.MergeFrom(AnyField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            AnyField = subBuilder;
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Api subBuilder = new global::Google.Protobuf.WellKnownTypes.Api();
            if (oneofFieldCase_ == OneofFieldOneofCase.ApiField) {
              subBuilder.MergeFrom(ApiField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            ApiField = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (oneofFieldCase_ == OneofFieldOneofCase.DurationField) {
              subBuilder.MergeFrom(DurationField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            DurationField = subBuilder;
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (oneofFieldCase_ == OneofFieldOneofCase.EmptyField) {
              subBuilder.MergeFrom(EmptyField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            EmptyField = subBuilder;
            break;
          }
          case 42: {
            global::Google.Protobuf.WellKnownTypes.FieldMask subBuilder = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            if (oneofFieldCase_ == OneofFieldOneofCase.FieldMaskField) {
              subBuilder.MergeFrom(FieldMaskField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            FieldMaskField = subBuilder;
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.SourceContext subBuilder = new global::Google.Protobuf.WellKnownTypes.SourceContext();
            if (oneofFieldCase_ == OneofFieldOneofCase.SourceContextField) {
              subBuilder.MergeFrom(SourceContextField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            SourceContextField = subBuilder;
            break;
          }
          case 58: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (oneofFieldCase_ == OneofFieldOneofCase.StructField) {
              subBuilder.MergeFrom(StructField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            StructField = subBuilder;
            break;
          }
          case 66: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofFieldCase_ == OneofFieldOneofCase.TimestampField) {
              subBuilder.MergeFrom(TimestampField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            TimestampField = subBuilder;
            break;
          }
          case 74: {
            global::Google.Protobuf.WellKnownTypes.Type subBuilder = new global::Google.Protobuf.WellKnownTypes.Type();
            if (oneofFieldCase_ == OneofFieldOneofCase.TypeField) {
              subBuilder.MergeFrom(TypeField);
            }
            var oldLimit = input.BeginReadNested(ref immediateBuffer);
            subBuilder.MergeFrom(input, ref immediateBuffer);
            input.EndReadNested(oldLimit);
            TypeField = subBuilder;
            break;
          }
          case 82: {
            DoubleField = input.ReadWrappedDouble(ref immediateBuffer);
            break;
          }
          case 90: {
            FloatField = input.ReadWrappedFloat(ref immediateBuffer);
            break;
          }
          case 98: {
            Int64Field = input.ReadWrappedInt64(ref immediateBuffer);
            break;
          }
          case 106: {
            Uint64Field = input.ReadWrappedUInt64(ref immediateBuffer);
            break;
          }
          case 114: {
            Int32Field = input.ReadWrappedInt32(ref immediateBuffer);
            break;
          }
          case 122: {
            Uint32Field = input.ReadWrappedUInt32(ref immediateBuffer);
            break;
          }
          case 130: {
            BoolField = input.ReadWrappedBool(ref immediateBuffer);
            break;
          }
          case 138: {
            StringField = input.ReadWrappedString(ref immediateBuffer);
            break;
          }
          case 146: {
            BytesField = input.ReadWrappedBytes(ref immediateBuffer);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A map field for each well-known type. We only
  /// need to worry about the value part of the map being the
  /// well-known types, as messages can't be map keys.
  /// </summary>
  public sealed partial class MapWellKnownTypes : pb::IMessage<MapWellKnownTypes> {
    private static readonly pb::MessageParser<MapWellKnownTypes> _parser = new pb::MessageParser<MapWellKnownTypes>(() => new MapWellKnownTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapWellKnownTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TestProtos.UnittestWellKnownTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapWellKnownTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapWellKnownTypes(MapWellKnownTypes other) : this() {
      anyField_ = other.anyField_.Clone();
      apiField_ = other.apiField_.Clone();
      durationField_ = other.durationField_.Clone();
      emptyField_ = other.emptyField_.Clone();
      fieldMaskField_ = other.fieldMaskField_.Clone();
      sourceContextField_ = other.sourceContextField_.Clone();
      structField_ = other.structField_.Clone();
      timestampField_ = other.timestampField_.Clone();
      typeField_ = other.typeField_.Clone();
      doubleField_ = other.doubleField_.Clone();
      floatField_ = other.floatField_.Clone();
      int64Field_ = other.int64Field_.Clone();
      uint64Field_ = other.uint64Field_.Clone();
      int32Field_ = other.int32Field_.Clone();
      uint32Field_ = other.uint32Field_.Clone();
      boolField_ = other.boolField_.Clone();
      stringField_ = other.stringField_.Clone();
      bytesField_ = other.bytesField_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapWellKnownTypes Clone() {
      return new MapWellKnownTypes(this);
    }

    /// <summary>Field number for the "any_field" field.</summary>
    public const int AnyFieldFieldNumber = 1;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Any> anyField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Any> AnyField {
      get { return anyField_; }
    }

    /// <summary>Field number for the "api_field" field.</summary>
    public const int ApiFieldFieldNumber = 2;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Api> apiField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Api>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Api> ApiField {
      get { return apiField_; }
    }

    /// <summary>Field number for the "duration_field" field.</summary>
    public const int DurationFieldFieldNumber = 3;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Duration> durationField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Duration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Duration> DurationField {
      get { return durationField_; }
    }

    /// <summary>Field number for the "empty_field" field.</summary>
    public const int EmptyFieldFieldNumber = 4;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Empty> emptyField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Empty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Empty> EmptyField {
      get { return emptyField_; }
    }

    /// <summary>Field number for the "field_mask_field" field.</summary>
    public const int FieldMaskFieldFieldNumber = 5;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.FieldMask> fieldMaskField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.FieldMask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.FieldMask> FieldMaskField {
      get { return fieldMaskField_; }
    }

    /// <summary>Field number for the "source_context_field" field.</summary>
    public const int SourceContextFieldFieldNumber = 6;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.SourceContext> sourceContextField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.SourceContext>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.SourceContext> SourceContextField {
      get { return sourceContextField_; }
    }

    /// <summary>Field number for the "struct_field" field.</summary>
    public const int StructFieldFieldNumber = 7;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Struct> structField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Struct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Struct> StructField {
      get { return structField_; }
    }

    /// <summary>Field number for the "timestamp_field" field.</summary>
    public const int TimestampFieldFieldNumber = 8;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Timestamp> timestampField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Timestamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Timestamp> TimestampField {
      get { return timestampField_; }
    }

    /// <summary>Field number for the "type_field" field.</summary>
    public const int TypeFieldFieldNumber = 9;
    private readonly pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Type> typeField_ = new pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Type>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.WellKnownTypes.Type> TypeField {
      get { return typeField_; }
    }

    /// <summary>Field number for the "double_field" field.</summary>
    public const int DoubleFieldFieldNumber = 10;
    private readonly pbc::MapField<int, double?> doubleField_ = new pbc::MapField<int, double?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, double?> DoubleField {
      get { return doubleField_; }
    }

    /// <summary>Field number for the "float_field" field.</summary>
    public const int FloatFieldFieldNumber = 11;
    private readonly pbc::MapField<int, float?> floatField_ = new pbc::MapField<int, float?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, float?> FloatField {
      get { return floatField_; }
    }

    /// <summary>Field number for the "int64_field" field.</summary>
    public const int Int64FieldFieldNumber = 12;
    private readonly pbc::MapField<int, long?> int64Field_ = new pbc::MapField<int, long?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, long?> Int64Field {
      get { return int64Field_; }
    }

    /// <summary>Field number for the "uint64_field" field.</summary>
    public const int Uint64FieldFieldNumber = 13;
    private readonly pbc::MapField<int, ulong?> uint64Field_ = new pbc::MapField<int, ulong?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, ulong?> Uint64Field {
      get { return uint64Field_; }
    }

    /// <summary>Field number for the "int32_field" field.</summary>
    public const int Int32FieldFieldNumber = 14;
    private readonly pbc::MapField<int, int?> int32Field_ = new pbc::MapField<int, int?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int?> Int32Field {
      get { return int32Field_; }
    }

    /// <summary>Field number for the "uint32_field" field.</summary>
    public const int Uint32FieldFieldNumber = 15;
    private readonly pbc::MapField<int, uint?> uint32Field_ = new pbc::MapField<int, uint?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, uint?> Uint32Field {
      get { return uint32Field_; }
    }

    /// <summary>Field number for the "bool_field" field.</summary>
    public const int BoolFieldFieldNumber = 16;
    private readonly pbc::MapField<int, bool?> boolField_ = new pbc::MapField<int, bool?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, bool?> BoolField {
      get { return boolField_; }
    }

    /// <summary>Field number for the "string_field" field.</summary>
    public const int StringFieldFieldNumber = 17;
    private readonly pbc::MapField<int, string> stringField_ = new pbc::MapField<int, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> StringField {
      get { return stringField_; }
    }

    /// <summary>Field number for the "bytes_field" field.</summary>
    public const int BytesFieldFieldNumber = 18;
    private readonly pbc::MapField<int, pb::ByteString> bytesField_ = new pbc::MapField<int, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, pb::ByteString> BytesField {
      get { return bytesField_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapWellKnownTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapWellKnownTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!AnyField.Equals(other.AnyField)) return false;
      if (!ApiField.Equals(other.ApiField)) return false;
      if (!DurationField.Equals(other.DurationField)) return false;
      if (!EmptyField.Equals(other.EmptyField)) return false;
      if (!FieldMaskField.Equals(other.FieldMaskField)) return false;
      if (!SourceContextField.Equals(other.SourceContextField)) return false;
      if (!StructField.Equals(other.StructField)) return false;
      if (!TimestampField.Equals(other.TimestampField)) return false;
      if (!TypeField.Equals(other.TypeField)) return false;
      if (!DoubleField.Equals(other.DoubleField)) return false;
      if (!FloatField.Equals(other.FloatField)) return false;
      if (!Int64Field.Equals(other.Int64Field)) return false;
      if (!Uint64Field.Equals(other.Uint64Field)) return false;
      if (!Int32Field.Equals(other.Int32Field)) return false;
      if (!Uint32Field.Equals(other.Uint32Field)) return false;
      if (!BoolField.Equals(other.BoolField)) return false;
      if (!StringField.Equals(other.StringField)) return false;
      if (!BytesField.Equals(other.BytesField)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= AnyField.GetHashCode();
      hash ^= ApiField.GetHashCode();
      hash ^= DurationField.GetHashCode();
      hash ^= EmptyField.GetHashCode();
      hash ^= FieldMaskField.GetHashCode();
      hash ^= SourceContextField.GetHashCode();
      hash ^= StructField.GetHashCode();
      hash ^= TimestampField.GetHashCode();
      hash ^= TypeField.GetHashCode();
      hash ^= DoubleField.GetHashCode();
      hash ^= FloatField.GetHashCode();
      hash ^= Int64Field.GetHashCode();
      hash ^= Uint64Field.GetHashCode();
      hash ^= Int32Field.GetHashCode();
      hash ^= Uint32Field.GetHashCode();
      hash ^= BoolField.GetHashCode();
      hash ^= StringField.GetHashCode();
      hash ^= BytesField.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void WriteTo(pb::CodedOutputStream output, ref global::System.Span<byte> immediateBuffer) {
      foreach (var entry in AnyField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(10, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in ApiField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(18, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in DurationField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(26, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in EmptyField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(34, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in FieldMaskField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(42, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in SourceContextField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(50, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in StructField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(58, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in TimestampField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(66, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in TypeField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        output.WriteRawTag(74, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteLength(entry.Value.CalculateSize(), ref immediateBuffer);
          entry.Value.WriteTo(output, ref immediateBuffer);
        }
      }
      foreach (var entry in DoubleField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedDoubleSize(entry.Value);
        }
        output.WriteRawTag(82, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedDouble(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in FloatField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedFloatSize(entry.Value);
        }
        output.WriteRawTag(90, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedFloat(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in Int64Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedInt64Size(entry.Value);
        }
        output.WriteRawTag(98, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedInt64(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in Uint64Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedUInt64Size(entry.Value);
        }
        output.WriteRawTag(106, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedUInt64(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in Int32Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedInt32Size(entry.Value);
        }
        output.WriteRawTag(114, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedInt32(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in Uint32Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedUInt32Size(entry.Value);
        }
        output.WriteRawTag(122, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedUInt32(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in BoolField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedBoolSize(entry.Value);
        }
        output.WriteRawTag(130, 1, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedBool(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in StringField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedStringSize(entry.Value);
        }
        output.WriteRawTag(138, 1, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedString(entry.Value, ref immediateBuffer);
        }
      }
      foreach (var entry in BytesField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedBytesSize(entry.Value);
        }
        output.WriteRawTag(146, 1, ref immediateBuffer);
        output.WriteLength(messageSize, ref immediateBuffer);
        if (entry.Key != 0) {
          output.WriteRawTag(8, ref immediateBuffer);
          output.WriteInt32(entry.Key, ref immediateBuffer);
        }
        if (entry.Value != null) {
          output.WriteRawTag(18, ref immediateBuffer);
          output.WriteWrappedBytes(entry.Value, ref immediateBuffer);
        }
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output, ref immediateBuffer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      foreach (var entry in AnyField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in ApiField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in DurationField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in EmptyField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in FieldMaskField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in SourceContextField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in StructField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in TimestampField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in TypeField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeMessageSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in DoubleField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedDoubleSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in FloatField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedFloatSize(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in Int64Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedInt64Size(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in Uint64Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedUInt64Size(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in Int32Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedInt32Size(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in Uint32Field) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedUInt32Size(entry.Value);
        }
        size += 1 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in BoolField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedBoolSize(entry.Value);
        }
        size += 2 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in StringField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedStringSize(entry.Value);
        }
        size += 2 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      foreach (var entry in BytesField) {
        var messageSize = 0;
        if (entry.Key != 0) {
          messageSize += 1 + pb::CodedOutputStream.ComputeInt32Size(entry.Key);
        }
        if (entry.Value != null) {
          messageSize += 1 + pb::CodedOutputStream.ComputeWrappedBytesSize(entry.Value);
        }
        size += 2 + pb::CodedOutputStream.ComputeLengthSize(messageSize) + messageSize;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapWellKnownTypes other) {
      if (other == null) {
        return;
      }
      anyField_.Add(other.anyField_);
      apiField_.Add(other.apiField_);
      durationField_.Add(other.durationField_);
      emptyField_.Add(other.emptyField_);
      fieldMaskField_.Add(other.fieldMaskField_);
      sourceContextField_.Add(other.sourceContextField_);
      structField_.Add(other.structField_);
      timestampField_.Add(other.timestampField_);
      typeField_.Add(other.typeField_);
      doubleField_.Add(other.doubleField_);
      floatField_.Add(other.floatField_);
      int64Field_.Add(other.int64Field_);
      uint64Field_.Add(other.uint64Field_);
      int32Field_.Add(other.int32Field_);
      uint32Field_.Add(other.uint32Field_);
      boolField_.Add(other.boolField_);
      stringField_.Add(other.stringField_);
      bytesField_.Add(other.bytesField_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.Security.SecurityCritical]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public void MergeFrom(pb::CodedInputStream input, ref global::System.ReadOnlySpan<byte> immediateBuffer) {
      uint tag;
      while ((tag = input.ReadTag(ref immediateBuffer)) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input, ref immediateBuffer);
            break;
          case 10: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Any entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Any();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            anyField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 18: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Api entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Api();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Api();
            }
            apiField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 26: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Duration entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            durationField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 34: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Empty entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Empty();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Empty();
            }
            emptyField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 42: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.FieldMask entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.FieldMask();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            fieldMaskField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 50: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.SourceContext entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.SourceContext();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.SourceContext();
            }
            sourceContextField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 58: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Struct entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            structField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 66: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Timestamp entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            timestampField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 74: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            global::Google.Protobuf.WellKnownTypes.Type entryValue = null;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                if (entryValue == null) {
                  entryValue = new global::Google.Protobuf.WellKnownTypes.Type();
                }
                var oldLimit = input.BeginReadNested(ref immediateBuffer);
                entryValue.MergeFrom(input, ref immediateBuffer);
                input.EndReadNested(oldLimit);
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            if (entryValue == null) {
              entryValue = new global::Google.Protobuf.WellKnownTypes.Type();
            }
            typeField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 82: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            double? entryValue = 0D;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                double? value = input.ReadWrappedDouble(ref immediateBuffer);
                if (entryValue == null || value != 0D) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            doubleField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 90: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            float? entryValue = 0F;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                float? value = input.ReadWrappedFloat(ref immediateBuffer);
                if (entryValue == null || value != 0F) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            floatField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 98: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            long? entryValue = 0L;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                long? value = input.ReadWrappedInt64(ref immediateBuffer);
                if (entryValue == null || value != 0L) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            int64Field_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 106: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            ulong? entryValue = 0UL;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                ulong? value = input.ReadWrappedUInt64(ref immediateBuffer);
                if (entryValue == null || value != 0UL) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            uint64Field_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 114: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            int? entryValue = 0;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                int? value = input.ReadWrappedInt32(ref immediateBuffer);
                if (entryValue == null || value != 0) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            int32Field_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 122: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            uint? entryValue = 0;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                uint? value = input.ReadWrappedUInt32(ref immediateBuffer);
                if (entryValue == null || value != 0) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            uint32Field_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 130: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            bool? entryValue = false;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                bool? value = input.ReadWrappedBool(ref immediateBuffer);
                if (entryValue == null || value != false) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            boolField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 138: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            string entryValue = "";
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                string value = input.ReadWrappedString(ref immediateBuffer);
                if (entryValue == null || value != "") {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            stringField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
          case 146: {
            var mapOldLimit = input.BeginReadNested(ref immediateBuffer);
            int entryKey = 0;
            pb::ByteString entryValue = pb::ByteString.Empty;
            uint ntag;
            while ((ntag = input.ReadTag(ref immediateBuffer)) != 0) {
              if (ntag == 8) {
                entryKey = input.ReadInt32(ref immediateBuffer);
              } else if (ntag == 18) {
                pb::ByteString value = input.ReadWrappedBytes(ref immediateBuffer);
                if (entryValue == null || value != pb::ByteString.Empty) {
                  entryValue = value;
                }
              } else {
                input.SkipLastField(ref immediateBuffer);
              }
            }
            bytesField_[entryKey] = entryValue;
            input.EndReadNested(mapOldLimit);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
